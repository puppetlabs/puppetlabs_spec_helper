.\" generated by kramdown
.TH "PATHSPEC\-RB" "1"
.SH "NAME"
pathspec \- Test pathspecs against a specific path
.SH "SYNOPSIS"
\fBpathspec\-rb\fP [\fBOPTIONS\fP] [\fBSUBCOMMAND\fP] [\fBPATH\fP] NAME PATH
.SH "DESCRIPTION"
\fBpathspc\-rb\fP is a tool that accompanies the pathspec\-ruby library to help you test what match results the library would find using path specs\. You can either find all specs matching a path, find all files matching specs, or verify that a path would match any spec\.
.P
https://github\.com/highb/pathspec\-ruby
.SH "SUB\-COMMANDS"
.TS
box ;
lb lb .
Name	Description	
=
.T&
l l .
\fIspecs_match\fP	Find all specs matching path	
_
.T&
l l .
\fItree\fP	Find all files under path matching the spec	
_
.T&
l l .
\fImatch\fP	Check if the path matches any spec	
.TE
.sp
.SH "OPTIONS"
.TP
\fB\-f <FILENAME>\fP, \fB\-\-file <FILENAME>\fP
Load path specs from the file passed in as argument\. If this option is not specified, \fBpathspec\-rb\fP defaults to loading \fB\&\.gitignore\fP\&\.
.TP
\fB\-t [git|regex]\fP, \fB\-\-type [git|regex]\fP
Type of spec expected in the loaded specs file (see \fB\-f\fP option)\. Defaults to \fBgit\fP\&\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Only output if there are matches\.
.SH "EXAMPLE"
Find all files ignored by git under your source directory:
.sp
.RS 4
.EX
  $ pathspec\-rb tree src/
.EE
.RE
.P
List all spec rules that would match for the specified path:
.sp
.RS 4
.EX
  $ pathspec\-rb specs_match build/
.EE
.RE
.P
Check that a path matches at least one of the specs in a new version of a gitignore file:
.sp
.RS 4
.EX
  $ pathspec\-rb match \-f \.gitignore\.new spec/fixtures/
.EE
.RE
.SH "AUTHOR"
Brandon High highb@users\.noreply\.github\.com
.P
Gabriel Filion
